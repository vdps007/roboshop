version: "3.8"
networks:
  test12:
    driver: bridge
# volumes:
# # This is equivalent to docker volume create [volume-name]. these are named volumes
#   mysql:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: /home/ec2-user/mysql
#   redis:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: /home/ec2-user/redis
#   rabbitmq:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: /home/ec2-user/rabbitmq
#   mongodb:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: /home/ec2-user/mongodb

services:
  web:
    image: web:v1
    container_name: web
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - user
    - cart
    - mysql
    - shipping
  mongodb:
    image: mongo:v1
    container_name: mongo
    # volumes:
    # - mongodb:/data/db
  catalogue:
    image: catalogue:v1
    container_name: catalogue
    depends_on:
    - mongodb
  redis:
    image: redis
    container_name: redis
    # volumes:
    # - redis:/data
  user:
    image: user:v1
    container_name: user
    depends_on:
    - mongodb
    - redis
  cart:
    image: cart:v1
    container_name: cart
    depends_on:
    - redis
    - catalogue
  mysql:
    image: mysql:v1
    container_name: mysql
    # volumes:
    # - mysql:/var/lib/mysql
  shipping:
    image: shipping:v1
    container_name: shipping
    depends_on:
    - mysql
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    # volumes:
    # - rabbitmq:/var/lib/rabbitmq
  payment:
    image: payment:v1
    container_name: payment
    depends_on:
    - rabbitmq


